[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\eafjo\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\eafjo\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Amazon.com Inc. Java 1.8.0_302)
[debug]       Load.loadUnit: plugins took 108.88ms
[debug]       Load.loadUnit: defsScala took 0.364499ms
[debug] [Loading] Scanning directory C:\Users\eafjo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eafjo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.7506 ms
[debug]           Load.resolveProject(global-plugins) took 60.313099ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\eafjo\.sbt\1.0\plugins, plugins: List(<none>))) took 114.315701ms
[debug] [Loading] Done in C:\Users\eafjo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 142.0476ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.262999ms
[debug]     Load.loadUnit(file:/C:/Users/eafjo/.sbt/1.0/plugins/, ...) took 262.4397ms
[debug]   Load.apply: load took 454.2118ms
[debug]   Load.apply: resolveProjects took 6.285401ms
[debug]   Load.apply: finalTransforms took 54.8279ms
[debug]   Load.apply: config.delegates took 9.4388ms
[debug]   Load.apply: Def.make(settings)... took 614.9035ms
[debug]   Load.apply: structureIndex took 96.364499ms
[debug]   Load.apply: mkStreams took 1.9674ms
[info] loading global plugins from C:\Users\eafjo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 99086.815199ms
[debug]           Load.loadUnit: plugins took 28.0686ms
[debug]           Load.loadUnit: defsScala took 0.002199ms
[debug] [Loading] Scanning directory C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala\project
[debug]             Load.loadUnit: mkEval took 10.772201ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.839 ms
[info] loading settings for project scala-build from idea.sbt ...
[debug]               Load.resolveProject(scala-build) took 6.237ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala\project, plugins: List(<none>))) took 8.6966ms
[debug] [Loading] Done in C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2584.5834ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.437301ms
[debug]         Load.loadUnit(file:/C:/Users/eafjo/IdeaProjects/ScalaPlayground2021Aug/src/test/scala/project/, ...) took 2621.4429ms
[debug]       Load.apply: load took 2624.208199ms
[debug]       Load.apply: resolveProjects took 0.136099ms
[debug]       Load.apply: finalTransforms took 12.0626ms
[debug]       Load.apply: config.delegates took 0.3633ms
[debug]       Load.apply: Def.make(settings)... took 159.956701ms
[debug]       Load.apply: structureIndex took 22.267699ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5814.700299ms
[debug]     Load.loadUnit: defsScala took 0.002699ms
[debug] [Loading] Scanning directory C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala
[debug]       Load.loadUnit: mkEval took 0.492ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9636 ms
[info] loading settings for project scala from build.sbt ...
[debug]         Load.resolveProject(scala) took 79.774401ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala, base: C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala, plugins: List(<none>))) took 83.608499ms
[debug] [Loading] Done in C:\Users\eafjo\IdeaProjects\ScalaPlayground2021Aug\src\test\scala, returning: (scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 958.8295ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.6758ms
[debug]   Load.loadUnit(file:/C:/Users/eafjo/IdeaProjects/ScalaPlayground2021Aug/src/test/scala/, ...) took 6785.3077ms
[debug] Load.apply: load took 6787.083ms
[debug] Load.apply: resolveProjects took 0.1165ms
[debug] Load.apply: finalTransforms took 22.209401ms
[debug] Load.apply: config.delegates took 0.2606ms
[debug] Load.apply: Def.make(settings)... took 56.959999ms
[debug] Load.apply: structureIndex took 17.091399ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to ScalaPlayground2021Aug (in build file:/C:/Users/eafjo/IdeaProjects/ScalaPlayground2021Aug/src/test/scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54979 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54979, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaPlayground2021Aug (in build file:/C:/Users/eafjo/IdeaProjects/ScalaPlayground2021Aug/src/test/scala/)
[debug] > Exec(idea-shell, None, None)
